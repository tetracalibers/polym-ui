<Props>
#----Styling----#
  sideRight: 
    - type: boolean
    - default: false
    - desc: ":last-child（右側）をサイドバーとみなすか"
  space:
    - type: string
    - default: "1.7rem"
    - desc: "サイドバーとメインコンテンツとの間の隙間"
  sideWidth:
    - type: string
    - default: "undefined"
    - desc: "垂直方向配置におけるサイドバーの幅。
            （無指定なら自動的に100%になる）"
  contentMin: 
    - type: number
    - default: 50
    - desc: "水平方向配置におけるコンテンツの最小幅[%]"
  noStretch:
    - type: boolean
    - default: false
    - desc: "垂直方向配置において、要素を本来の高さになるようにするか"
</Props>

<Vocabulary>
  <Side>
    & {
      flex-basis: 20rem;
      flex-grow: 1;
    }
    
    @exist(sideWidth);
    & {
      max-width: props(sideWidth);
    }
  </Side>
  <Main>
    & {
      flex-basis: 0;
      flex-grow: 999;
      min-width: calc(1% * props(contentMin));
    }
  </Main>
</Vocabulary>

<Cascade>
  & {
    display: flex;
    flex-wrap: wrap;
    gap: props(space);
  }
  
  @truthy(noStretch);
  & {
    align-items: flex-start;
  }
  
  @falsy(sideRight);
  & > :first-child { @vocabulary: Side; }
  & > :last-child { @vocabulary: Main; }
  @invert;
</Cascade>

<Structure>
  <Block>
    <Children>
      <Child />
      <Child />
    </Children>
  </Block>
</Structure>